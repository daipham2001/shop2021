/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-11-27 14:18:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.project.ecommerce.dao.BrandDAO;
import com.project.ecommerce.model.Brand;
import java.text.DecimalFormat;
import com.project.ecommerce.model.Employee;
import com.project.ecommerce.dao.ProductDAO;
import com.project.ecommerce.model.Product;
import com.project.ecommerce.dao.CategoryDAO;
import com.project.ecommerce.model.Category;
import java.util.ArrayList;
import java.util.List;
import java.text.SimpleDateFormat;

public final class ProductCategory_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.project.ecommerce.model.Product");
    _jspx_imports_classes.add("com.project.ecommerce.dao.BrandDAO");
    _jspx_imports_classes.add("com.project.ecommerce.model.Employee");
    _jspx_imports_classes.add("com.project.ecommerce.model.Category");
    _jspx_imports_classes.add("com.project.ecommerce.dao.ProductDAO");
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("com.project.ecommerce.model.Brand");
    _jspx_imports_classes.add("com.project.ecommerce.dao.CategoryDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	 ");

		Employee user = (Employee) session.getAttribute("employeeSession");
		 if(user == null){			
			response.sendRedirect("LoginAdmin.jsp");
			return;
		} 
		
      out.write(" \n");
      out.write("\n");
      out.write("	");

	Product product= new Product();
	ProductDAO productDAO= new ProductDAO();
	List<Product> listProducts= new ArrayList<>();
	String idCate=  request.getParameter("idCate");
	
	listProducts= productDAO.listProductbyCategoryBrand(Integer.parseInt(idCate));
	Brand brand= new Brand();
	BrandDAO brandDAO= new BrandDAO();
	List<Category> lisCategories= new ArrayList<>();
	Category category=new Category();
	CategoryDAO categoryDAO= new CategoryDAO();
	DecimalFormat formatter = new DecimalFormat("###,###,###");
		
		
	
      out.write("\n");
      out.write("	<div class=\"content-page\">\n");
      out.write("		<p class=\"head-table\">Danh sách Sản Phẩm</p>\n");
      out.write("\n");
      out.write("		<div style=\"height: 480px\" class=\"content-table table-responsive\">\n");
      out.write("				<table class=\"table table-striped edit-table-view\" >			\n");
      out.write("					<tr>\n");
      out.write("						<th style=\"width: 10%\">Mã Sản Phẩm</th>\n");
      out.write("						<th style=\"width: 30%\">Tên Sản Phẩm</th>\n");
      out.write("						<th style=\"width: 20%\">Hãng</th>\n");
      out.write("						<th style=\"width: 15%\">Giá ($)</th>\n");
      out.write("						<th style=\"width: 10%\">Số Lượng (cái)</th>\n");
      out.write("						<th style=\"width: 5%\"></th>\n");
      out.write("						<th style=\"width: 5%\"></th>\n");
      out.write("						<th style=\"width: 5%\"></th>\n");
      out.write("						</tr>\n");
      out.write("				 	");

					  for (int i = 0; i < listProducts.size(); i++) {  
						  String idProduct=listProducts.get(i).getId();
						  String name=listProducts.get(i).getName();
						  int price =listProducts.get(i).getPrice();
						  int quantity=listProducts.get(i).getQuantity();
						  String description= listProducts.get(i).getDescription();
						  brand= brandDAO.brandById(listProducts.get(i).getBrandID());
						  category= categoryDAO.categoryByBrandID(listProducts.get(i).getBrandID());
						  
					
      out.write(" \n");
      out.write("					<tr style=\"height:50px\" class=\"contentPage tableViewContent\" >\n");
      out.write("					\n");
      out.write("						<td >");
      out.print(idProduct );
      out.write("</td>\n");
      out.write("						<td class=\"colName\">");
      out.print(name);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(brand.getName() );
      out.write("</td>\n");
      out.write("					\n");
      out.write("						<td class=\"colPrice\">$");
      out.print(formatter.format(price));
      out.write("</td>\n");
      out.write("							<td class=\"colQuantity\">");
      out.print(quantity);
      out.write("</td>\n");
      out.write("						<td>\n");
      out.write("						<button id=\"btn-delete\" class=\"btn btn-delete\"\n");
      out.write("						");
 int count=productDAO.countProductinSeri(idProduct);
							if(count>0){
						
      out.write(" style=\"display:none\"");
} 
      out.write("\n");
      out.write("								data-name=\"");
      out.print(name);
      out.write("\"\n");
      out.write("								data-id=\"");
      out.print(idProduct);
      out.write("\">Xóa</button>\n");
      out.write("							\n");
      out.write("						</td>\n");
      out.write("						<td>\n");
      out.write("						<button id=\"btn-edit");
      out.print(idProduct);
      out.write("\" class=\"btn btn-primary btn-edit\"\n");
      out.write("								data-id=\"");
      out.print(idProduct);
      out.write("\"\n");
      out.write("								data-name=\"");
      out.print(name);
      out.write("\"\n");
      out.write("								data-price= \"");
      out.print(price );
      out.write("\"\n");
      out.write("								data-description= \"");
      out.print(description );
      out.write("\"\n");
      out.write("						>Sửa</button>\n");
      out.write("						</td>\n");
      out.write("						\n");
      out.write("						<td>\n");
      out.write("						<button class=\"btn btn-primary btn-seri\"\n");
      out.write("								data-id=\"");
      out.print(idProduct);
      out.write("\" data-button=\"viewSeri\">Seri</button>\n");
      out.write("							\n");
      out.write("						</td>\n");
      out.write("\n");
      out.write("					</tr>\n");
      out.write("				\n");
      out.write("				");

					}
				
      out.write("\n");
      out.write("			</table>\n");
      out.write("			\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("		<ul style=\"margin-top: 20px\" id=\"pagination\" class=\"justify-content-center\">\n");
      out.write("	  	</ul>\n");
      out.write("	  	\n");
      out.write("		<div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" role=\"dialog\"\n");
      out.write("			aria-hidden=\"true\" style=\"display: none\">\n");
      out.write("			<div class=\"modal-dialog\" role=\"document\">\n");
      out.write("				<div class=\"modal-content\">\n");
      out.write("					<div class=\"modal-header\">\n");
      out.write("						<h5 class=\"modal-title\">Xóa Sản Phẩm</h5>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"modal-body\">\n");
      out.write("					<span>Bạn có muốn xóa sản phẩm : </span><span id=\"alertDelete\"></span>\n");
      out.write("					<p class=\"alert\" id=\"alertDeleteProduct\"></p>\n");
      out.write("				</div>\n");
      out.write("					<div class=\"modal-footer\">\n");
      out.write("					<button type=\"button\" class=\"btn btn-primary\"\n");
      out.write("							data-button=\"delete\" id=\"delete\">Có</button>\n");
      out.write("						<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Không</button>\n");
      out.write("						\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		<div class=\"modal fade\" id=\"editPostModal\" tabindex=\"-1\" role=\"dialog\"\n");
      out.write("			aria-hidden=\"true\" >\n");
      out.write("			<div class=\"modal-dialog\" role=\"document\">\n");
      out.write("				<form class=\"modal-content\">\n");
      out.write("					<div class=\"modal-header\">\n");
      out.write("						<h5 class=\"modal-title\">Sửa Sản Phẩm</h5>\n");
      out.write("						 <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n");
      out.write("          <span aria-hidden=\"true\">&times;</span>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"modal-body\">\n");
      out.write("						<h6 >\n");
      out.write("							Tên Sản Phẩm\n");
      out.write("							\n");
      out.write("						</h6>\n");
      out.write("					\n");
      out.write("						\n");
      out.write("						<input type=\"text\"  id=\"edit-name\" style=\"width: 100%\" />\n");
      out.write("						<p class=\"alert\" id = \"alert_name\" style=\"margin: 0; padding: 0;\"> </p>	\n");
      out.write("						<h6 >\n");
      out.write("							Giá Sản Phẩm\n");
      out.write("							\n");
      out.write("						</h6>\n");
      out.write("					\n");
      out.write("						\n");
      out.write("						<input type=\"number\"  id=\"edit-price\" style=\"width: 100%\" />\n");
      out.write("						<p class=\"alert\" id = \"alert_price\" style=\"margin: 0; padding: 0;\"> </p>	\n");
      out.write("						<h6 >\n");
      out.write("							Mô Tả Sản Phẩm\n");
      out.write("							\n");
      out.write("						</h6>\n");
      out.write("					\n");
      out.write("						\n");
      out.write("						<textarea rows=\"10\" class=\"col-12\" type=\"text\"  id=\"edit-description\" style=\"width: 100%\" />\n");
      out.write("						<p class=\"alert\" id = \"alert_description\" style=\"margin: 0; padding: 0;\"> </p>		\n");
      out.write("						</div>\n");
      out.write("						<div class=\"modal-footer\">			\n");
      out.write("						<button type=\"button\" class=\"btn btn-primary\" id=\"edit\"\n");
      out.write("								 data-button=\"edit\">Đồng Ý</button>\n");
      out.write("						<button type=\"button\" id=\"reset-edit\" class=\"btn btn-default\">Phục Hồi</button>\n");
      out.write("							\n");
      out.write("						</div>\n");
      out.write("				</form>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("	</div>\n");
      out.write("	<script>\n");
      out.write("	$(function () {	\n");
      out.write("		var pageSize = 6; // Hiển thị 6 sản phẩm trên 1 trang\n");
      out.write("		showPage = function(page) {\n");
      out.write("			$(\".contentPage\").hide();\n");
      out.write("			$(\".contentPage\").each(function(n) {\n");
      out.write("				if (n >= pageSize * (page - 1) && n < pageSize * page)\n");
      out.write("					$(this).show();\n");
      out.write("			});        \n");
      out.write("		}\n");
      out.write("		showPage(1);\n");
      out.write("		///** Cần truyền giá trị vào đây **///\n");
      out.write("		var totalRows = ");
      out.print(listProducts.size());
      out.write("; // Tổng số sản phẩm hiển thị\n");
      out.write("		var btnPage = 3; \n");
      out.write("		var iTotalPages = Math.ceil(totalRows / pageSize);\n");
      out.write("\n");
      out.write("		var obj = $('#pagination').twbsPagination({\n");
      out.write("			totalPages: iTotalPages,\n");
      out.write("			visiblePages: btnPage,\n");
      out.write("			onPageClick: function (event, page) {\n");
      out.write("				/* console.info(page); */\n");
      out.write("				showPage(page);\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("	$(document).ready(function(){\n");
      out.write("		var id = $(this).attr(\"data-id\")\n");
      out.write("		var name = $(this).attr(\"data-name\")\n");
      out.write("\n");
      out.write("		//bắt sự kiện click nút delete trong table \n");
      out.write("		$(\".btn-delete\").click(function() {\n");
      out.write("			\n");
      out.write("			var id = $(this).attr(\"data-id\")\n");
      out.write("			var name = $(this).attr(\"data-name\")\n");
      out.write("			$('#delete').val(id);\n");
      out.write("			t = $(this).parent().parent('tr');\n");
      out.write("			$('#alertDelete').html(name)\n");
      out.write("			$(\"#deleteModal\").modal('show')\n");
      out.write("		})\n");
      out.write("		$(\"#delete\").click(function() {\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			var id = $('#delete').val();\n");
      out.write("			var dataButton = $(this).attr('data-button');\n");
      out.write("			$.ajax({\n");
      out.write("				type : \"post\",\n");
      out.write("				url : \"/ShopSmartPhone/productServlet\",\n");
      out.write("				data : {\n");
      out.write("					id : id,\n");
      out.write("					dataButton : dataButton\n");
      out.write("				},\n");
      out.write("				success : function(response) {\n");
      out.write("					if (response == \"success\") {\n");
      out.write("						$(\"#deleteModal\").modal('hide')\n");
      out.write("					 	$(\"#content\").load(\"ProductAdmin.jsp\") \n");
      out.write("						$('.modal-backdrop').remove()\n");
      out.write("					}\n");
      out.write("					else if(response == \"fail\"){\n");
      out.write("						$(\"#alertDeleteProduct\").html('(* Đã có lỗi xảy ra *)')\n");
      out.write("					}\n");
      out.write("					\n");
      out.write("				}\n");
      out.write("			});\n");
      out.write("		})\n");
      out.write("		$(\".btn-seri\").click(function(){\n");
      out.write("			var id=$(this).attr(\"data-id\")\n");
      out.write("			var dataButton=$(this).attr(\"data-button\")\n");
      out.write("			$.ajax({\n");
      out.write("				type : \"post\",\n");
      out.write("				url : \"/ShopSmartPhone/seriServlet\",\n");
      out.write("				data : {\n");
      out.write("					id : id,\n");
      out.write("					dataButton : dataButton\n");
      out.write("				},\n");
      out.write("				success : function(response) {\n");
      out.write("					if (response == \"success\") {\n");
      out.write("						\n");
      out.write("						$(\"#content\").load(\"../Admin/ViewSeri.jsp\")\n");
      out.write("					}\n");
      out.write("				}\n");
      out.write("			});\n");
      out.write("		})\n");
      out.write("		//bắt sự kiện click nút Add trong table \n");
      out.write("		$(\".btn-addcontent\").click(function() {\n");
      out.write("			$(\"#content\").load(\"../Admin/GoodReceipt.jsp\")\n");
      out.write("		})\n");
      out.write("		//bắt sự kiện click nút Edit trong table \n");
      out.write("		$(\".btn-edit\").click(function() {\n");
      out.write("			$(\"#editPostModal\").modal('show')\n");
      out.write("			t = $(this).parent().parent('tr');\n");
      out.write("			var id = $(this).attr(\"data-id\")\n");
      out.write("			var name = $(this).attr(\"data-name\")\n");
      out.write("			var price = $(this).attr(\"data-price\")\n");
      out.write("			var description= $(this).attr(\"data-description\")\n");
      out.write("			$(\"#reset-edit\").click(function(){\n");
      out.write("				$('#edit-name').val(name)\n");
      out.write("				$('#edit-price').val(price)\n");
      out.write("			})\n");
      out.write("			\n");
      out.write("			$('#edit').val(id)\n");
      out.write("			$(\"#edit-name\").val(name)\n");
      out.write("			$(\"#edit-price\").val(price)\n");
      out.write("			$(\"#edit-description\").val(description)\n");
      out.write("\n");
      out.write("			$(\"#edit-name\").keypress(function() {\n");
      out.write("				$(\"#alert_name\").html('')\n");
      out.write("			})\n");
      out.write("			$(\"#edit-price\").keypress(function() {\n");
      out.write("				$(\"#alert_price\").html('')\n");
      out.write("			})\n");
      out.write("			$(\"#edit-description\").keypress(function() {\n");
      out.write("				$(\"#alert_description\").html('')\n");
      out.write("			})\n");
      out.write("\n");
      out.write("		})\n");
      out.write("		//bắt sự kiện click OK\n");
      out.write("		$(\"#edit\").click(function() {\n");
      out.write("			var id = $('#edit').val()\n");
      out.write("			var dataButton = $(this).attr('data-button')\n");
      out.write("			var flag = 0;\n");
      out.write("			var idedit= \"#btn-edit\"+id\n");
      out.write("			var name= $(\"#edit-name\").val()\n");
      out.write("			var price= $(\"#edit-price\").val()\n");
      out.write("			var description= $(\"#edit-description\").val()\n");
      out.write("			\n");
      out.write("			 if(name.trim()==\"\"){\n");
      out.write("	            	$(\"#alert_name\").html('(* Bạn cần điền tên sản phẩm *)')\n");
      out.write("	            	flag = 1;\n");
      out.write("	            }\n");
      out.write("			if(price.trim()==\"\"){\n");
      out.write("	        	$(\"#alert_price\").html('(* Bạn cần điền giá sản phẩm *)')\n");
      out.write("	        	flag = 1;\n");
      out.write("	       		}\n");
      out.write("			if(price<=0 & price.trim()!=''){\n");
      out.write("	        	$(\"#alert_price\").html('(* Giá sản phẩm phải lớn hơn 0*)')\n");
      out.write("	        	flag = 1;\n");
      out.write("	       		}\n");
      out.write("			if(description.trim()==\"\"){\n");
      out.write("	        	$(\"#alert_description\").html('(* Bạn cần điền thông tin sản phẩm *)')\n");
      out.write("	        	flag = 1;\n");
      out.write("	       		}\n");
      out.write("	        if(flag == 0){\n");
      out.write("			$.ajax({\n");
      out.write("				type : \"post\",\n");
      out.write("				url : \"/ShopSmartPhone/productServlet\",\n");
      out.write("				data : {\n");
      out.write("					id : id,\n");
      out.write("					name : name,\n");
      out.write("					price : price,\n");
      out.write("					description : description,\n");
      out.write("					dataButton : dataButton\n");
      out.write("				},\n");
      out.write("				success : function(response) {\n");
      out.write("					if (response == \"success\") {\n");
      out.write("						$(\"#editPostModal\").modal('hide')\n");
      out.write("						$('.modal-backdrop').remove()  \n");
      out.write("						$(idedit).attr('data-name',name)\n");
      out.write("						$(idedit).attr('data-price',price)\n");
      out.write("						$(idedit).attr('data-description',description)\n");
      out.write("						t.find('.colName').html(name)\n");
      out.write("						t.find('.colPrice').html(price)\n");
      out.write("					}\n");
      out.write("					else if(response == \"exist\"){\n");
      out.write("						$(\"#alert_name\").html('(* Đã tồn tại tên sản phẩm này *)')\n");
      out.write("					}\n");
      out.write("					else if(response == \"fail\"){\n");
      out.write("						$(\"#alert_name\").html('(* Đã có lỗi xảy ra *)')\n");
      out.write("					}\n");
      out.write("				}\n");
      out.write("			});\n");
      out.write("			\n");
      out.write("	       }\n");
      out.write("	    	\n");
      out.write("		})\n");
      out.write("\n");
      out.write("	})\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
